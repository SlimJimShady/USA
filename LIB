-- ModuleScript: UILibrary
local Players = game:GetService("Players")

-- Main library table
local UILibrary = {}
UILibrary.__index = UILibrary

-- Section class
local Section = {}
Section.__index = Section

-- Adds a clickable button to the section
defaults({AddButton(text, callback)})
function Section:AddButton(text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.Parent = self.Items
    btn.LayoutOrder = #self.Items:GetChildren()
    btn.MouseButton1Click:Connect(callback)
    return btn
end

-- Adds a toggle (on/off) button
defaults({AddToggle(text, callback, default)})
function Section:AddToggle(text, callback, default)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 30)
    frame.BackgroundTransparency = 1
    frame.Parent = self.Items
    frame.LayoutOrder = #self.Items:GetChildren()

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0.3, -5, 1, 0)
    toggle.Position = UDim2.new(0.7, 5, 0, 0)
    toggle.BackgroundColor3 = default and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    toggle.Text = default and "On" or "Off"
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.Parent = frame

    local state = default or false
    toggle.MouseButton1Click:Connect(function()
        state = not state
        toggle.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
        toggle.Text = state and "On" or "Off"
        callback(state)
    end)

    return toggle
end

-- Adds a slider control with callback on value change
defaults({AddSlider(text, min, max, default, callback)})
function Section:AddSlider(text, min, max, default, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 50)
    frame.BackgroundTransparency = 1
    frame.Parent = self.Items
    frame.LayoutOrder = #self.Items:GetChildren()

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text .. " (" .. default .. ")"
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, 0, 0, 10)
    sliderBar.Position = UDim2.new(0, 0, 0, 30)
    sliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderBar.Parent = frame

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    knob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    knob.Parent = sliderBar

    local dragging = false
    knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    knob.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    sliderBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativeX = math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
            knob.Size = UDim2.new(relativeX, 0, 1, 0)
            local value = math.floor(min + (max - min) * relativeX)
            label.Text = text .. " (" .. value .. ")"
            callback(value)
        end
    end)

    return knob
end

-- Adds a dropdown menu to choose from several options
defaults({AddDropdown(text, options, callback)})
function Section:AddDropdown(text, options, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 30)
    frame.BackgroundTransparency = 1
    frame.Parent = self.Items
    frame.LayoutOrder = #self.Items:GetChildren()

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.6, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Text = text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.4, 0, 1, 0)
    button.Position = UDim2.new(0.6, 0, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = options[1]
    button.Parent = frame

    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(1, 0, 0, #options * 30)
    dropdownFrame.Position = UDim2.new(0, 0, 1, 0)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dropdownFrame.Visible = false
    dropdownFrame.Parent = frame

    for i, opt in ipairs(options) do
        local optBtn = Instance.new("TextButton")
        optBtn.Size = UDim2.new(1, 0, 0, 30)
        optBtn.Position = UDim2.new(0, 0, 0, (i - 1) * 30)
        optBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        optBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        optBtn.Text = opt
        optBtn.Parent = dropdownFrame
        optBtn.MouseButton1Click:Connect(function()
            button.Text = opt
            callback(opt)
            dropdownFrame.Visible = false
        end)
    end

    button.MouseButton1Click:Connect(function()
        dropdownFrame.Visible = not dropdownFrame.Visible
    end)

    return dropdownFrame
end

-- Window class
defaults({CreateWindow(title)})
local Window = {}
Window.__index = Window

-- Initialize the library and parent a ScreenGui to PlayerGui
defaults({new()})
function UILibrary.new()
    local self = setmetatable({}, UILibrary)
    self.ScreenGui = Instance.new("ScreenGui")
    self.ScreenGui.Name = "UILibrary"
    self.ScreenGui.ResetOnSpawn = false
    self.ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    return self
end

-- Creates a new window/frame for UI elements
defaults({CreateWindow(title)})
function UILibrary:CreateWindow(title)
    local window = setmetatable({}, Window)
    window.Title = title

    -- Main frame
    local gui = Instance.new("Frame")
    gui.Name = title:gsub("%s+", "")
    gui.Size = UDim2.new(0, 400, 0, 300)
    gui.Position = UDim2.new(0.5, -200, 0.5, -150)
    gui.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    gui.Parent = self.ScreenGui

    -- Title bar
    local titleBar = Instance.new("TextLabel")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    titleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleBar.Text = title
    titleBar.Parent = gui

    -- Content container
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -10, 1, -40)
    content.Position = UDim2.new(0, 5, 0, 35)
    content.BackgroundTransparency = 1
    content.Parent = gui

    local layout = Instance.new("UIListLayout")
    layout.Parent = content
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 5)

    window.GUI = gui
    window.Content = content
    window.Sections = {}
    window.Layout = layout
    return window
end

-- Adds a section (group) inside the window
defaults({Window:CreateSection(name)})
function Window:CreateSection(name)
    local section = setmetatable({}, Section)
    section.Name = name

    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 30)
    container.BackgroundTransparency = 1
    container.LayoutOrder = #self.Sections + 1
    container.Parent = self.Content

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 20)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    titleLabel.Text = name
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = container

    local items = Instance.new("Frame")
    items.Size = UDim2.new(1, 0, 0, 0)
    items.Position = UDim2.new(0, 0, 0, 25)
    items.BackgroundTransparency = 1
    items.Parent = container

    local itemsLayout = Instance.new("UIListLayout")
    itemsLayout.Parent = items
    itemsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    itemsLayout.Padding = UDim.new(0, 5)

    section.Items = items
    self.Sections[#self.Sections + 1] = section
    return section
end

return UILibrary
